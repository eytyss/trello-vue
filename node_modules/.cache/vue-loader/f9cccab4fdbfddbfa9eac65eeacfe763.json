{"remainingRequest":"/home/jean/Загрузки/trello-clone-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jean/Загрузки/trello-clone-main/src/components/Popup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jean/Загрузки/trello-clone-main/src/components/Popup.vue","mtime":1639297226000},{"path":"/home/jean/Загрузки/trello-clone-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jean/Загрузки/trello-clone-main/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/jean/Загрузки/trello-clone-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jean/Загрузки/trello-clone-main/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAidnVleCI7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNhcmROYW1lOiBudWxsLAogICAgfTsKICB9LAogIG5hbWU6IlBvcHVwIgogICwKICBjb21wdXRlZDogewogICAgLi4ubWFwU3RhdGUoWyJvdmVybGF5IiwgImN1cnJlbnREYXRhIl0pLAogIH0sCiAgbWV0aG9kczogewogICAgc2F2ZUVsZW1lbnQoKSB7CiAgICAgIGlmICh0aGlzLmNhcmROYW1lID09PSBudWxsKSB7CiAgICAgICAgdGhpcy5jYXJkTmFtZSA9IHRoaXMuY3VycmVudERhdGEubmFtZTsKICAgICAgfQogICAgICBjb25zdCBjYXJkID0gewogICAgICAgIGxpc3RJZDogdGhpcy5jdXJyZW50RGF0YS5saXN0SWQsCiAgICAgICAgaWQ6IHRoaXMuY3VycmVudERhdGEuaWQsCiAgICAgICAgbmFtZTogdGhpcy5jYXJkTmFtZSwKICAgICAgfTsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCJzYXZlQ2FyZCIsIGNhcmQpOwogICAgICB0aGlzLmNhcmROYW1lID0gbnVsbDsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCJ0b2dnbGVPdmVybGF5Iik7CiAgICB9CiAgfSwKfTsK"},{"version":3,"sources":["Popup.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Popup.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <transition>\n    <div v-if=\"overlay\" class=\"modal\">\n      <h1>List Name : {{ currentData.listName }}</h1>\n      <input :placeholder=\"currentData.name\" v-model=\"cardName\" />\n      <div class=\"container-button\">\n        <button class=\"blue\" @click=\"saveElement\">save</button>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      cardName: null,\n    };\n  },\n  name:\"Popup\"\n  ,\n  computed: {\n    ...mapState([\"overlay\", \"currentData\"]),\n  },\n  methods: {\n    saveElement() {\n      if (this.cardName === null) {\n        this.cardName = this.currentData.name;\n      }\n      const card = {\n        listId: this.currentData.listId,\n        id: this.currentData.id,\n        name: this.cardName,\n      };\n      this.$store.commit(\"saveCard\", card);\n      this.cardName = null;\n      this.$store.commit(\"toggleOverlay\");\n    }\n  },\n};\n</script>\n\n<style scoped>\n.v-enter-from {\n  opacity: 0;\n}\n\n.v-enter-active {\n  transition: all 0.3s ease-out;\n}\n\n.v-enter-to {\n  opacity: 1;\n}\n\n.v-leave-from {\n  opacity: 1;\n}\n\n.v-leave-active {\n  transition: all 0.3s ease-in;\n}\n\n.v-leave-to {\n  opacity: 0;\n}\n\n.modal {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  position: absolute;\n  height: 500px;\n  width: 500px;\n  border-radius: 10px;\n  background-color: rgba(235, 236, 240, 1);\n  z-index: 550;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\ninput {\n  width: 250px;\n  height: 50px;\n  padding: 10px 20px 10px 20px;\n  border: 1px solid rgba(60, 60, 60, 0.2);\n  border-radius: 15px;\n}\n\nbutton {\n  display: flex;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  border-radius: 15px;\n  cursor: pointer;\n  transition-duration: 0.4s;\n}\n\nbutton:hover {\n  color: white;\n}\n\n.blue {\n  background-color: rgba(1, 100, 255, 1);\n}\n\n.blue:hover {\n  background-color: rgba(1, 100, 255, 0.8);\n}\n\n.red {\n  background-color: rgba(250, 52, 75, 1);\n}\n.red:hover {\n  background-color: rgba(250, 52, 75, 0.8);\n}\n\n.container-button {\n  display: flex;\n  flex-direction: row;\n  gap: 30px;\n}\n</style>\n"]}]}